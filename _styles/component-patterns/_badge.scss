/*

*/

$badge-namespace: c- !default;

$theme-only: false !default;

$content-breakpoint: 60em !default;


.#{$badge-namespace}badge {

    /*
        1. For positioned pseudo elements, e.g. External indicator.
        2. For IE11
    */
    &#{&} {
        display: inline-block;
        vertical-align: middle;

        position: relative; /* [1] */
        max-width: 100%; /* [2] */
        
        border: 0;
        padding: 0;
        margin: 0;
    }

        svg {
            max-width: 100%;
        }

        img {
            /*
                1. This is to provide positioning context for the ::after pseudo-element.
                2. This is so a broken image is still 100%.
                3. -- Center in container. -- don't think this is necessary until find example
                   breaks IE11 so need to overridide it below if keeping.
            */

            position: relative; /* [1] */

            display: block; /* [2] */

            //height: fit-content;
            //width: auto;
            width: 100%;

            max-width: 100%;

            border-style: none;

            background-color: transparent;

            /* margin: 0 auto; /* [3] */
            margin: 0;

        }

    &#{&}--limit-height,
    &#{&}--limit-height--8 {
        img {
            max-height: 8rem;
        }
    }

    &#{&}--limit-height--4 {
        img {
            max-height: 4rem;
        }
    }

    &#{&}--limit-height--6 {
        img {
            max-height: 6rem;
        }
    }

    &#{&}--limit-height--10 {
        img {
            max-height: 10rem;
        }
    }

    &#{&}--limit-height--12 {
        img {
            max-height: 12rem;
        }
    }


    &#{&}--limit-height--m {
        img {
            max-height: $s__sz-m;
        }
    }
    
    &#{&}--limit-height--l {
        img {
            max-height: $s__sz-l;
        }
    }
    
    &#{&}--limit-height--xl {
        img {
            max-height: $s__sz-xl;
        }
    }
    
    &#{&}--limit-height--xxl {
        img {
            max-height: $s__sz-xxl;
        }
    }
    

    &#{&}--small {
        height: 2em;
        width: 2em;

        & img {
            width: 100%;
            height: 100%;
        }
    }
    /*
    &#{&}--circle {
        border-radius: 50%;
        overflow: hidden;
    }

    &#{&}--rounded {
        border-radius: 0.2em;
        overflow: hidden;
    }
    */

    &#{&}--decorated {

        // Currently setting colour via inline style, so can't lighten it. Fake this by using a
        // pseudo element for the background:
        // Also href borders mess with these border settings, so use pseudo element for that
        // too.
        position: relative; 

        padding: $s__sz-m;


        &::before {
            content: "";
            display: block;
            position: absolute;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;

            opacity: 0.05;
            background-color: currentColor;
        }

        &::after {
            content: "";
            display: block;
            position: absolute;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;

            border-width: $s__sz-xxs;
            border-style: solid;
            border-color: currentColor;
        }
    }

    &#{&}--page-brand img {
        display: block;
        margin: 0 auto;
        max-height: 18rem;
    }
}

a[href].#{$badge-namespace}badge {
    
    //width: 100%;
    //height: 100%;
    //flex: 1 0px;

    &:hover,
    &:active,
    &:focus {
        border: 0;
        box-shadow: 0 0 0 0.6rem #fff, 0 0 0 1.2rem rgba(0,0,0,.2);
        
        & img {
            box-shadow: none;
        }
    }
    
    & img {
        border: 0;
    }
}

a[href][rel~="external"].#{$badge-namespace}badge::after {
    display: none;
}

a[href][rel~="external"].#{$badge-namespace}badge:hover::after,
a[href][rel~="external"].#{$badge-namespace}badge:active::after,
a[href][rel~="external"].#{$badge-namespace}badge:focus::after {
    position: absolute;
    right: -1em;
    top: -1em;
    width: 1.25em;
    height: 1.25em;
    display: block;
    margin: 0;
}

/*
    IE10-11

    1. IE11- seems to need this.
    ... Or, maybe not!?!?! Weird. 03/09/2020 - taken this out.
    UGGGGH - needs it in the banner badges, but not badge list badges.
*/

@media #{$s__ie10-11} {

    .#{$badge-namespace}badge {
    
        svg {
            width: 100%;
        }
    
        //img {
        //    height: auto; /* [1] */
        //}


        /*
            For some reason flex images size differently in IE11, so we need to multiply these
            values by 1.666 !!! but only in the header. Footer logos behave properly.
            I can't figure out what's causing the difference, so scoping to the header for now.
        */
        /*.c-page-header__affiliate_logos &#{&}--limit-height,
        .c-page-header__affiliate_logos &#{&}--limit-height--8 {
            img {
                max-height: 8rem * 1.666;
            }
        }

        .c-page-header__affiliate_logos &#{&}--limit-height--4 {
            img {
                max-height: 4rem * 1.666;
            }
        }

        .c-page-header__affiliate_logos &#{&}--limit-height--6 {
            img {
                max-height: 6rem * 1.666;
            }
        }

        .c-page-header__affiliate_logos &#{&}--limit-height--10 {
            img {
                max-height: 10rem * 1.666;
            }
        }

        .c-page-header__affiliate_logos &#{&}--limit-height--12 {
            img {
                max-height: 12rem * 1.666;
            }
        }*/
    }
    
    /*
        Undo rule set above (commented out currently until I'm sure)
    */
    /*a[href].#{$badge-namespace}badge img {
        margin: 0;
    }*/
}

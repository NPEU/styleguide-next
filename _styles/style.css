/*! NPEU Theme (c) NPEU */
/* --| START THEME |----------------------------------------------------------------------------- */
/* --| SETTINGS |-------------------------------------------------------------------------------- */
/**/
/**/
/**/
/**/
/*
//@debug $s__base-ui-color;

$s__html-background-color: darken(map-get(map-get($themes, neutral), primary-color), 20%);

$s__body-padding: 0;
$s__main-max-line-length: 0;
$s__main-padding: 0;

$s__anchor-text-color: #333;

// I shouldn't have to set this as the !default should allow a cascade.
// Investigate why this is happening. I don't think it's a SASS problem as it seems to work in a
// reduced test-case (though to be fair this isn't using @import...)
// https://codepen.io/akirk/pen/RmWKgy
$s__anchor-text-color--alt: #333;



$s__selection-background-color: lighten(map-get(map-get($themes, neutral), primary-color), 10%) !default;
$s__experimental_checkradios: true;


$s__class-namespace: c-;
$fs__include_class_bordered: false;
$fs__include_class_padded:   false;
$fs__include_class_poem:     false;
*/
/*! Start-CSS. See SCSS file for documentation. */
/*-------------------------------------------------------------------------------------------------|

    START-CSS
    ============================================================================================

    Start-CSS is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+

    Notes:

    -moz-calc because this supports FF8+ and I like to be thorough.

    CSS hacks from http://browserstrangeness.com/css_hacks.html
    (hack and browser support in comments above each usage)

    !!! Maybe don't include custom properties in this, I think it over-complicates things and needs
    gradient background overlays to lighten/darken background colors dynamically.
    Possibly include a separate file to add custom property support that overrides what it needs,
    all wrapped in an `@supports`.

    Resources:
    * http://www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/
    * https://24ways.org/2006/compose-to-a-vertical-rhythm

    NOTE TO SELF.
    Where borders are concerned, probably best to leave margins alone and use padding to maintain
    baseline-grid. After all, if there's a border, there will have to be padding too.

    overflow-y makes element focussable in FireFox.

|-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|

    START-CSS FUNCTIONS
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    Colour contrast from https://gist.github.com/FStop/8959422

    Usage:
    @if s__color_contrast($colour, #fff) < 2 {
        color: #333;
    }
    @else{
        color: #fff;
    }
*/
/* Awesome contrast ratio function
* via https://gist.github.com/voxpelli/6304812
**/
/*-------------------------------------------------------------------------------------------------|

    START-CSS MIXINS
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    Apply a border and a padding that offsets the border-width from one spacing unit so as not to
    affect the vertical rhythm.
    Note the Opera Mini doesn't support `calc` so we need to include normal padding for that
    browser.
    Also, since we're supporting FF 8+, we're including -moz-calc for versions up to 16.
    I may consider removing this as those browsers are dead, but I'm just being thorough for now.

    Note on the 'last margin' issue/hack:
    The pseudo element is intended to provide a collapsible margin to cancel out any 'trailing'
    margins from content elements. However, since we're reducing the whole padding space by the
    border-width to maintain the vertical rhythm, that margin is also less, BUT the content margin
    is NOT being reduced, so that wins out - the reduction is ignored.
    If the pseudo element bottom margin is adjusted to cancel out the height (1px) AS WELL AS
    the amount of border-width, but the last element DOES NOT have a margin, then the space becomes
    too small.
    If pseudo-element height is 0, it doesn't work in IE, Chrome, Safari, without inline-block
*/
/*
    This button mixin isn't really meant for generating specific/themed _types_ of button - there
    would be too much code duplication for that.
    Instead, this is intended to create buttons for new/custom selectors.
    For example:

    ```
    [role="button"] {
        @include s__button;
    }
    ```

    rather than:

    ```
        .btn--affirmative {
            @include s__button(<text-color>, <bg-color>);
        }
    ```

    Note - because of this, think about removing parameters (it changed from my original intention -
    I may change it back or split this into 2 mixins, or even just move things that are meant for
    input[type="button"] to that ruleset - actually that's not a bad idea).

*/
/*
    1. Remove the tapping delay from clickable elements.

    Sort out the height of buttons. At 12px spacing, should be 30px high with 3px top/bottom margin.
    Note Edge doesn't like: `line-height: calc(3rem - 2px)` if `display: inline-flex`
    FF8 - ? doesn't like `line-height: -moz-calc()` and ignores
    Need to make sure height is governed by line-height in case of breaks within buttons.
*/
/*
    Uni-directional margins (bottom) is fine for most cases, but things like figcaptions that may
    contain paragraphs can result in double bottom margins, so flipping that around inside those
    containers.
*/
/*-------------------------------------------------------------------------------------------------|

    START-CSS TOKENS
    ============================================================================================

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specifity.
    This allows any applicable Start-CSS declarations to be overidden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattren}`

    https://coolors.co/50514f-f25f5c-ffe066-247ba0-70c1b3

|-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|

    START-CSS SETTINGS
    ============================================================================================

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specifity.
    This allows any applicable Start-CSS declarations to be overidden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattren}`

    https://coolors.co/50514f-f25f5c-ffe066-247ba0-70c1b3

|-------------------------------------------------------------------------------------------------*/
/*
    HTML
*/
/*
    BODY
*/
/*
    ANCHOR
    
    1. This size allows 2px on normal fonts, 1px on smaller fonts.
*/
/* [1] */
/*
    ASIDE
*/
/* Output class for reference (tmp): */
/*.ref {
    flbk--base-rem-space-unit: $s__base-rem-space-unit;
    flbk--base-rem-1px: $s__base-rem-1px;
    flbk--root-font-size: $s__root-font-size;
    flbk--root-font-size-percent: $s__root-font-size-percent;
}*/
/*------------------------------------------------------------------------------------------------*\

    ROOT STYLES

\*------------------------------------------------------------------------------------------------*/
/*
    https://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/
    https://css-tricks.com/snippets/javascript/fix-ie-10-on-windows-phone-8-viewport/

    The following rule fixes a problem with IE10 on Windows 8 snap mode, but apparently causes
    problems on Windows Phone where the only fix seems to be a JS one.

    https://nostrongbeliefs.com/why-i-think-we-shouldnt-use-css-viewport-in-ie10-for-now/

    This reckons it's not worth it and as I can't seem to test the Windows Phone problem (emulator
    on BrowserStack - not real device which is why I _think) I'm not seeing the problem) I think it
    may be safest to keep this out for now.
    - Hmmm affect 8.1 IE11 as well... not good.
    UPDATE: using hack to only apply the viewport declaration to IE10-11 may work?

    https://timkadlec.com/2013/01/windows-phone-8-and-device-width/
*/
:root {
  quotes: '\201c' '\201d' '\2018' '\2019';
}

/*
    1. Change the default box-sizing (-moz prefix for FF8-28).

    2. `min-height` _should_ be what we want here (as declared in inuit css), except that
       `min-height` doesn't works as expected; child elements set to `(min-)height: 100%;` won't
       increase their height - they'll only do that if the parent has `height: 100%;`.
       This can lead to situations where sometimes elements (and thus their visible decoration) do
       not stretch to be tall enough for their content (because they're limited to 100% height).

    3. Force scrollbars to always be visible to prevent awkward 'jumps' when
       navigating between pages that do/do not have enough content to produce
       scrollbars naturally. (I)

    4. Convert the value to a percentage so as not to override user font settings.
       This needs to be on the root node.

    5. Prevent font size adjustments after orientation changes in IE and iOS. (N)

    6. Use a more readable tab size (opinionated).
*/
html {
  -moz-box-sizing: border-box;
  /* 1 */
  box-sizing: border-box;
  /* 1 */
  height: 100%;
  /* 2 */
  overflow-y: scroll;
  /* 3 */
  color: #111;
  background-color: #1f1727;
  font-size: 0.625em;
  /* 4 */
  -ms-text-size-adjust: 100%;
  /* 5 */
  -webkit-text-size-adjust: 100%;
  /* 5 */
  padding: 0;
  margin: 0;
  -moz-tab-size: 4;
  /* 6 */
  tab-size: 4;
  /* 6 */
}

/*
    Fix font size for IE9-11 as it can't calculate % to 1 decimal place! Grrr.
*/
@media screen and (min-width: 0\0) and (min-resolution: +72dpi) {
  html {
    font-size: calc(62.5em / 100);
  }
}

/*
    'Global' reset.

    1. For Mac Safari 6.1-8.
*/
* {
  -webkit-margin-before: 0;
  /* 1 */
  -webkit-margin-after: 0;
  /* 1 */
  -webkit-margin-start: 0;
  /* 1 */
  -webkit-margin-end: 0;
  /* 1 */
  margin: 0;
  padding: 0;
}

/*
    1. Add box sizing inheritance in all browsers.
       Supporting FF8+ due to Mustard Cut so including for completeness.
    2. Remove repeating backgrounds in all browsers.
*/
*,
::before,
::after {
  -moz-box-sizing: inherit;
  /* 1 */
  box-sizing: inherit;
  /* 1 */
  background-repeat: no-repeat;
  /* 2 */
  -webkit-font-smoothing: inherit;
}

/*
    1. Add text decoration inheritance in all browsers (opinionated). (s)
    2. Add vertical alignment inheritance in all browsers (s).
*/
::before,
::after {
  text-decoration: inherit;
  /* 1 */
  vertical-align: inherit;
  /* 2 */
}

/*
    Remove the inner border and padding from form elements in older Firefox.
*/
::-moz-focus-inner {
  margin: 0;
  padding: 0;
  border: 0;
}

/*
    1. Ensure that absolutely positioned child elements expand to the full height of the body.
    2. Reset any FOUC font match fallback. @TODO Make these vars.
*/
body {
  position: relative;
  /* 1 */
  width: 100%;
  min-width: 250px;
  min-height: 100%;
  max-width: none;
  margin: 0;
  padding: 0;
  font-family: "Lato", sans-serif;
  font-size: 1.6em;
  line-height: 2.4rem;
  letter-spacing: initial;
  /* 2 */
  word-spacing: initial;
  /* 2 */
  background-color: transparent;
  color: #111;
}

/* IE9-11 */
@media screen and (min-width: 0\0) and (min-resolution: +72dpi) {
  body {
    height: 100%;
  }
}

/*
    @DEPRECATED - use the clearer method below:
    CSS only message
*/
[data-css-only="true"] {
  display: none;
}

/*
    New method hide stuff if CSS has loaded:
*/
[data-if-css="hide"] {
  display: none;
}

/*
    This method duplicates [hidden="false"][aria-hidden="false"] in accessibilty.scss, but I'm
    thinking of maybe deprecating that.
*/
[data-if-css="visually-hide"] {
  clip: rect(0 0 0 0);
  position: absolute;
  display: inline;
  /*border: 0;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    width: 1px;*/
}

/*------------------------------------------------------------------------------------------------*\

    ALL ELEMENTS

\*------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: a
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    a:link a:visited a:hover a:active a:focus

    1. Remove the gray background on active links in IE 10.
    2. Remove the gaps in underlines in iOS 8+ and Safari 8+.
    3. Remove the tapping delay from clickable elements .
*/
a[href] {
  color: inherit;
  background-color: transparent;
  /* 1 */
  text-decoration: underline;
  text-decoration-style: underline;
  text-decoration-thickness: 0.2rem;
  text-underline-offset: 0.2em;
  -webkit-text-decoration-skip: objects;
  /* 2 */
  -ms-touch-action: manipulation;
  /* 3 (IE10) */
  touch-action: manipulation;
  /* 3 */
  /*
        1. For older browsers, the 2nd rule is ignored in those.
    */
}

a[href]:hover, a[href]:active {
  text-decoration: none;
  /* [1] */
  text-decoration: underline dashed;
  /* [1] */
}

a[href]:focus {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
}

@supports (-moz-appearance: none) {
  a[href] {
    text-decoration-thickness: 0.15385em;
  }
}

a[href] svg:not(:only-child) {
  margin-left: 0.25em;
}

@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  a[href] svg {
    vertical-align: text-bottom;
  }
}

a[href][rel~="external"]::after {
  display: inline;
  content: "";
  padding-left: 1.16666666667em;
  margin: 0 0.5em;
  background: linear-gradient(45deg, transparent 50%, currentColor 50%);
  font-size: 0.375em;
  line-height: 0;
  vertical-align: super;
}

a[href][rel~="external"]:hover::after {
  background: linear-gradient(45deg, transparent 50%, currentColor 50%);
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: abbr
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Remove the bottom border in Firefox 39-.
    2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
*/
abbr {
  cursor: help;
}

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: address
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
address {
  margin-bottom: 2.4rem;
  margin-top: 0;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: article
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
article {
  display: block;
  margin-bottom: 2.4rem;
  margin-top: 0;
  padding-bottom: 2.4rem;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: aside
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
aside {
  display: block;
  margin-bottom: 2.4rem;
  margin-top: 0;
  padding: 2.4rem;
  background-color: #fff;
  color: #111;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: audio
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Add the correct display in IE 9-.
    2. Chrome 44-, iOS 8+, Safari 9+.
*/
audio {
  display: inline-block;
  /* 1 */
  vertical-align: middle;
}

audio:not([controls]) {
  display: none;
  /* 2 */
  height: 0;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: b
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1: Add the correct font weight in Chrome, Edge, and Safari.
    2. Prevent increase in line-height in IE.
*/
b {
  font-weight: bolder;
  /* 1 */
  line-height: 1;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: blockquote
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
blockquote {
  margin-bottom: 2.4rem;
  margin-top: 0;
  margin-left: 2.4rem;
  font-style: italic;
  /*
        @TODO - set up vars and styles for the most common quote styles.
        I.e. left-border, and enclosing quotes.
    */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: button
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
button {
  display: inline-block;
  /* AK. IE9 needs this. Hmmm, for what exactly?*/
  min-height: 3rem;
  overflow: visible;
  /* S: Internet Explorer 11-, N: Show the overflow in Edge, Firefox, and IE. */
  margin: 0.3rem 0;
  padding-top: 0.3rem;
  padding-top: -moz-calc(0);
  padding-top: calc(0.3rem - 0.1rem);
  padding-right: 0.6rem;
  padding-bottom: 0.3rem;
  padding-bottom: -moz-calc(0);
  padding-bottom: calc(0.3rem - 0.1rem);
  padding-left: 0.6rem;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: solid;
  border-width: 0.1rem;
  border-radius: 0.3rem;
  color: #fff;
  background-color: #5d4777;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: 2.4rem;
  vertical-align: middle;
  text-transform: none;
  /* [N0], N: Remove the inheritance of text transform in Edge, Firefox, and IE. */
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
  -webkit-appearance: none;
  /*@if $s__button-focus-outline-width != false {
        &:hover,
        &:active,
        &:focus {
            outline-width: $s__button-focus-outline-width;
            outline-style: $s__button-focus-outline-style;
            outline-color: $s__button-focus-outline-color;
            outline-offset: $s__button-focus-outline-offset;
        }
    }*/
}

button:hover, button:active {
  background-color: #443457;
}

button:focus {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
}

button svg {
  vertical-align: text-bottom;
}

_:-o-prefocus, :root button {
  line-height: 2.4rem !important;
}

/*
    FF15-

    Remove the inner border and padding in Firefox and fix height.

    Early FF doesn't correctly apply the box sizing to inputs (buttons?)
    Adding margin to -moz-focus-inner helps to force the correct height.
    It doesn't have any effect in newer FF.

    NOTE: these adjustments don't seem very robust / dependent on font-family and font-size.
*/
button::-moz-focus-inner {
  margin: -0.0625em 0;
}

/*
    Reset for FF16+
*/
_:-moz-meter-optimum, :root button::-moz-focus-inner {
  margin: 0;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: canvas
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Add the correct display in IE 9-.
*/
canvas {
  display: inline-block;
  /* 1 */
  vertical-align: middle;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: caption
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
caption {
  display: table-caption;
  padding-top: 1.2rem;
  padding-right: 1.2rem;
  padding-bottom: 1.2rem;
  padding-left: 1.2rem;
  color: #fff;
  background-color: rgba(93, 71, 119, 0.7);
  font-weight: bold;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: code
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Correct the inheritance and scaling of font size in all browsers. (N)
    2. Address odd `em`-unit font size rendering in all browsers. (N)
    3. Prevent the element increasing the line-height of the parent.
*/
code {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
  line-height: 0;
  /* 3 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: dd
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
dd {
  margin-left: 3.6rem;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: details
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
details {
  display: block;
  /* N: IE 10/11 */
  margin-bottom: 2.4rem;
  margin-top: 0;
  padding-bottom: 2.4rem;
  border-width: 0.1rem;
  border-style: solid;
  border-color: #5d4777;
  padding-top: 2.4rem;
  padding-top: calc(2.4rem - 0.1rem);
  padding-left: 2.4rem;
  padding-left: calc(2.4rem - 0.1rem);
  padding-right: 2.4rem;
  padding-right: calc(2.4rem - 0.1rem);
  padding-bottom: 2.4rem;
  padding-bottom: calc(2.4rem - 0.1rem);
}

details > * {
  box-sizing: border-box;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: dfn
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    Address styling not present in Safari and Chrome. (N)
*/
dfn {
  font-style: italic;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: dl
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Either of these will make lists behave properly next to floated items.
       (https://paulbakaus.com/tutorials/css/block-formatting-contexts-and-lists)
       a. This causes problems with some decoration. E.g. if the last element in the list is a link,
          bottom borders get cropped, so using b instead.
       b. `flow-root` is the better option but support is low, so using table.
          Edge breaks if flow-root is applied, even though it's meant to be ignored.
          -moz-box / flex causes numbering to mess up (always 0) on FF8-50.
          This is the only thing that works in early FF. However, width is content-width, not
          available width so any 'boxy' decoration on the list might look weird.
          Flex based options cause other problems, i.e. not wrapping properly.

*/
dl {
  margin-bottom: 2.4rem;
  margin-top: 0;
  display: table;
  /* 1b */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: dt
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
dt {
  font-weight: bold;
  margin-top: 2.4rem;
}

dt:first-child,
dt + dt {
  margin-top: 0;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: em
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. De-italicize nested ems
*/
em em {
  font-style: normal;
  /* 1 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: fieldset
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    Fieldsets and legends can be difficult to style so I'm keeping their appearance basically the
    same as the default - just a bit of theming.
    More info here: https://thatemil.com/blog/2015/01/03/reset-your-fieldset/
*/
fieldset {
  margin-bottom: 2.4rem;
  margin-top: 0;
  min-width: 0;
  border-width: 0.1rem;
  border-style: solid;
  border-color: #5d4777;
  padding-top: 2.4rem;
  padding-top: calc(2.4rem - 0.1rem);
  padding-left: 2.4rem;
  padding-left: calc(2.4rem - 0.1rem);
  padding-right: 2.4rem;
  padding-right: calc(2.4rem - 0.1rem);
  padding-bottom: 2.4rem;
  padding-bottom: calc(2.4rem - 0.1rem);
}

fieldset fieldset {
  margin: 0;
  padding: 0;
  border-width: 0;
}

fieldset fieldset::after {
  display: none;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: figcaption
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
figcaption {
  display: block;
  font-size: 0.875em;
  margin-bottom: 0;
  margin-top: 0;
}

figcaption * {
  margin-bottom: 0;
}

figcaption * + * {
  margin-top: 1.2rem;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: figure
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
figure {
  display: block;
  margin-bottom: 2.4rem;
  margin-top: 0;
  max-width: 100%;
  overflow: auto;
  background-image: linear-gradient(-90deg, rgba(255, 255, 255, 0) 0%, white 60%, white 100%), linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, white 60%, white 100%), linear-gradient(to right, rgba(0, 0, 20, 0.5), rgba(255, 255, 255, 0)), linear-gradient(to left, rgba(0, 0, 20, 0.5), rgba(255, 255, 255, 0));
  background-position: left center, right center, left center, right center;
  background-repeat: no-repeat;
  background-color: white;
  background-size: 2em 100%, 2em 100%, 1em 100%, 1em 100%;
  background-attachment: local, local, scroll, scroll;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: footer
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
footer {
  display: block;
  margin-bottom: 2.4rem;
  margin-top: 0;
  padding: 2.4rem;
  background-color: #fff;
  color: #111;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: form
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
form {
  margin-bottom: 2.4rem;
  margin-top: 0;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: header
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
header {
  display: block;
  margin-bottom: 2.4rem;
  margin-top: 0;
  border-width: 0;
  border-style: solid;
  border-color: #5d4777;
  padding-top: 2.4rem;
  padding-top: calc(2.4rem - 0);
  padding-left: 2.4rem;
  padding-left: calc(2.4rem - 0);
  padding-right: 2.4rem;
  padding-right: calc(2.4rem - 0);
  padding-bottom: 2.4rem;
  padding-bottom: calc(2.4rem - 0);
  background-color: #fff;
  color: #111;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: hgroup
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
hgroup {
  display: block;
  margin-bottom: 2.4rem;
  margin-top: 0;
  padding-bottom: 2.4rem;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: h
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
h1 {
  margin-bottom: 2.4rem;
  margin-top: 0;
  font-size: 3.25em;
  line-height: 6rem;
}

h2 {
  margin-bottom: 2.4rem;
  margin-top: 0;
  font-size: 2.5em;
  line-height: 4.8rem;
}

h3 {
  margin-bottom: 2.4rem;
  margin-top: 0;
  font-size: 1.875em;
  line-height: 3.6rem;
}

h4 {
  margin-bottom: 2.4rem;
  margin-top: 0;
  font-size: 1.375em;
  line-height: 3.6rem;
}

h5 {
  margin-bottom: 2.4rem;
  margin-top: 0;
  font-size: 1.125em;
  line-height: 2.4rem;
}

h6 {
  margin-bottom: 2.4rem;
  margin-top: 0;
  font-size: 1em;
  line-height: 2.4rem;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: hr
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Show the overflow in Edge and IE. (N)
*/
hr {
  height: 0;
  overflow: visible;
  /* 1 */
  margin-top: -0.1rem;
  margin-bottom: 2.4rem;
  border-top: none;
  border-right: none;
  border-bottom: 0.1rem solid #5d4777;
  border-left: none;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: iframe
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
iframe {
  vertical-align: middle;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: img
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Fluid images for responsive purposes.
    2. Remove the border on images inside links in IE 10-.
    3. Offset `alt` text from surrounding copy.
    4. Setting `vertical-align` removes the whitespace that appears under `img` elements when they
       are dropped into a page as-is. Safer alternative to using `display: block;`.
    5. Google Maps breaks if `max-width: 100%` acts upon it; use their selector to remove the
       effects.
    6. If a `width` and/or `height` attribute have been explicitly defined, let's not make the
       image fluid.
*/
img {
  max-width: 100%;
  /* 1 */
  border-style: none;
  /* 2  */
  font-style: italic;
  /* 3 */
  vertical-align: middle;
  /* 4 */
  /*.gm-style &, /* 5 *
    &[width], /* 6 *
    &[height] {  /* 6 *
        max-width: none;
    }*/
}

img .gm-style {
  /* 5 */
  max-width: none;
}

/*
    Special treatment for images inside links.
*/
a img {
  margin-bottom: 0.2em;
  border-bottom: 0.2rem solid;
}

a img:active, a img:hover {
  border-bottom: 0.2rem dashed;
}

/*
    Here's a problem - if the image has a transparent background, the a's bounding box (which is 
    inline and smaller than the image) is visible.
    Outlines actually work as expected in this case but I can't use them because of the lack of 
    rounded corners, hence the a > img selector reapplying the focus shadow.
    I guess transparent images like this are an edge case, but it's something to keep an eye on.
*/
a:focus img {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: input
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Allow inputs to contract to avoid braking containers:
    2. Opera Mini needs this.
    3. Remove the tapping delay from clickable elements (S)
    4. Keep adjacent elements in the middle.
    5. This helps prevent default 'normal' from increasing element height in webkit.
*/
input {
  max-width: 100%;
  /* 1 */
  padding-top: 0.3rem;
  /* 2 */
  padding-top: calc(0.3rem - 0.1rem);
  padding-right: 0.6rem;
  padding-bottom: 0.3rem;
  /* 2 */
  padding-bottom: calc(0.3rem - 0.1rem);
  padding-left: 0.6rem;
  border-width: 0.1rem;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.2);
  border-radius: 0.3rem;
  color: #111;
  background-color: #fff;
  font-size: inherit;
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  -ms-touch-action: manipulation;
  /* 3 (IE10) */
  touch-action: manipulation;
  /* 3 */
  vertical-align: middle;
  /* 4 */
  line-height: inherit;
  /* 5 */
  min-height: 3rem;
  margin: 0.3rem 0;
}

input:not([type]):focus,
[type="color"]:focus,
[type="date"]:focus,
[type="datetime"]:focus,
[type="datetime-local"]:focus,
[type="file"]:focus,
[type="month"]:focus,
[type="number"]:focus,
[type="password"]:focus,
[type="search"]:focus,
[type="range"]:focus,
[type="tel"]:focus,
[type="text"]:focus,
[type="time"]:focus,
[type="url"]:focus,
[type="week"]:focus {
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
  outline: 0;
}

/*
        Without custom styling (appearance: none), Safari doesn't apply the shadow, so breaks
        accessibility ...
    */
[type="checkbox"]:focus,
[type="radio"]:focus {
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
  outline: 0;
}

/*
        ... so reinstating the outline:
    */
_::-webkit-full-page-media, _:future, :root [type="checkbox"]:focus,
_::-webkit-full-page-media, _:future, :root [type="radio"]:focus {
  outline: auto 5px -webkit-focus-ring-color;
}

/*
    IE9 adds the border and background:
*/
[type="checkbox"],
[type="radio"] {
  border: 0;
  background: transparent;
  cursor: pointer;
}

[type="button"],
[type="reset"],
[type="submit"] {
  display: inline-block;
  /* AK. IE9 needs this. Hmmm, for what exactly?*/
  min-height: 3rem;
  overflow: visible;
  /* S: Internet Explorer 11-, N: Show the overflow in Edge, Firefox, and IE. */
  margin: 0.3rem 0;
  padding-top: 0.3rem;
  padding-top: -moz-calc(0);
  padding-top: calc(0.3rem - 0.1rem);
  padding-right: 0.6rem;
  padding-bottom: 0.3rem;
  padding-bottom: -moz-calc(0);
  padding-bottom: calc(0.3rem - 0.1rem);
  padding-left: 0.6rem;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: solid;
  border-width: 0.1rem;
  border-radius: 0.3rem;
  color: #fff;
  background-color: #5d4777;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: 2.4rem;
  vertical-align: middle;
  text-transform: none;
  /* [N0], N: Remove the inheritance of text transform in Edge, Firefox, and IE. */
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
  -webkit-appearance: none;
  /*@if $s__button-focus-outline-width != false {
        &:hover,
        &:active,
        &:focus {
            outline-width: $s__button-focus-outline-width;
            outline-style: $s__button-focus-outline-style;
            outline-color: $s__button-focus-outline-color;
            outline-offset: $s__button-focus-outline-offset;
        }
    }*/
}

[type="button"]:hover, [type="button"]:active,
[type="reset"]:hover,
[type="reset"]:active,
[type="submit"]:hover,
[type="submit"]:active {
  background-color: #443457;
}

[type="button"]:focus,
[type="reset"]:focus,
[type="submit"]:focus {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
}

/*
    IE10 makes the line-height massive with calc, but doesn't appear to need it anyway.
*/
[type="button"],
[type="reset"],
[type="submit"] {
  line-height: 1\9;
}

/*
    IE and Edge behave differently (both to other browsers and each other) and so min-height and
    line-height settings don't seem consistent.

    1. On smaller devices the width of these inputs can force horizontal scrolling.
       Max-width doesn't work to solve this, but may be needed to restrict width on larger screens.
    2. Make sure button corners aren't visible.
*/
[type="file"] {
  width: 100%;
  /* 1 */
  max-width: 18.5em;
  min-height: 3rem;
  overflow: hidden;
  /* 2 */
  margin: 0.3rem 0;
  padding: 0;
  cursor: pointer;
}

/*
    Fix button height in Firefox.
*/
_:-moz-any-link, :root [type="file"] {
  height: 3rem;
}

_:-ms-input-placeholder, :root [type="file"] {
  background-color: #5d4777;
}

@media screen and (min-width: 0\0) and (min-resolution: 72dpi) {
  [type="file"] {
    padding-left: 0.6rem;
  }
}

/*
    iOS turns these inputs into selects which are a touch too high.
*/
[type="date"],
[type="datetime-local"],
[type="month"],
[type="time"],
[type="week"] {
  height: 2.8rem;
}

/*
    Remove extra padding in Chrome
*/
[type="date"]::-webkit-datetime-edit-fields-wrapper,
[type="datetime-local"]::-webkit-datetime-edit-fields-wrapper,
[type="month"]::-webkit-datetime-edit-fields-wrapper,
[type="time"]::-webkit-datetime-edit-fields-wrapper,
[type="week"]::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

/*
    Tidy spin buttons and apply cursor:
*/
[type="date"]::-webkit-inner-spin-button,
[type="datetime-local"]::-webkit-inner-spin-button,
[type="month"]::-webkit-inner-spin-button,
[type="number"]::-webkit-inner-spin-button,
[type="time"]::-webkit-inner-spin-button,
[type="week"]::-webkit-inner-spin-button {
  height: auto;
  cursor: pointer;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * N: Remove the inner padding and cancel buttons in Chrome on OS X and
 * Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
    Correct the text style on placeholders in Chrome, Edge, and Safari.
*/
::-webkit-input-placeholder {
  color: inherit;
  opacity: .54;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: kbd
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Correct the inheritance and scaling of font size in all browsers. (N)
    2. Address odd `em`-unit font size rendering in all browsers. (N)
    3. Prevent the element increasing the line-height of the parent.
*/
kbd {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
  line-height: 0;
  /* 3 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: label
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Remove the tapping delay from clickable elements.
*/
label {
  display: inline-block;
  padding-top: 0.6rem;
  padding-bottom: 0.6rem;
  margin: 0;
  font-weight: bold;
  vertical-align: middle;
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: legend
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    Fieldsets and legends can be difficult to style so I'm keep their appearance basically the same
    as the default - just a bit of theming.
    More info here: https://thatemil.com/blog/2015/01/03/reset-your-fieldset/


    1. Correct the text wrapping in Edge and IE.
    2. Offset border width.
    3. Correct the color inheritance from `fieldset` elements in IE.

    Note $fieldset-border-width used deliberately (not $s__legend-border-width)- this is to account for
    the fact that fieldset top border width is ignored if there's a legend so the spacing is wrong.
*/
legend {
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  margin-top: 0;
  /* 2 */
  margin-bottom: 0.1rem;
  /* 2 */
  padding: 0 0.6rem;
  border-width: 0;
  color: inherit;
  /* 3 */
  font-weight: bold;
  white-space: normal;
  /* 1 */
  /*  */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: li
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
li {
  margin-left: 3.6rem;
}

li ul,
li ol {
  margin-bottom: 0;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: main
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Correct `block` display not defined for `main` in IE.
*/
main {
  display: block;
  /* 1 */
  width: 100%;
  min-height: 100%;
  padding: 0;
  margin-bottom: 2.4rem;
  margin-top: 0;
  background-color: #fff;
  color: #111;
  position: relative;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: mark
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    Address styling not present in IE 8/9.
*/
mark {
  background: #ff0;
  color: #000;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: nav
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
nav {
  display: block;
  margin-bottom: 2.4rem;
  margin-top: 0;
  padding-bottom: 2.4rem;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: object
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
object {
  vertical-align: middle;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: ol
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Either of these will make lists behave properly next to floated items.
       (https://paulbakaus.com/tutorials/css/block-formatting-contexts-and-lists)
       a. This causes problems with some decoration. E.g. if the last element in the list is a link,
          bottom borders get cropped, so using b instead.
       b. `flow-root` is the better option but support is low, so using table.
          Edge breaks if flow-root is applied, even though it's meant to be ignored.
          -moz-box / flex causes numbering to mess up (always 0) on FF8-50.
          This is the only thing that works in early FF. However, width is content-width, not
          available width so any 'boxy' decoration on the list might look weird.
          Flex based options cause other problems, i.e. not wrapping properly.

*/
ol {
  margin-bottom: 2.4rem;
  margin-top: 0;
  display: table;
  /* 1b */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: optgroup
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. The default cannot safely be changed in Chrome and Safari on OS X. ?? Not sure what this means now.
*/
optgroup {
  color: #111;
  background-color: #fff;
  font-weight: bold;
  /* 1 */
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: option
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. This v-centers the text in FF and Chrome. Edge doesn't apply this but looks ok regardless.
       Just IE9-11 to sort out?
*/
option {
  display: flex;
  /* 1 */
  align-items: center;
  /* 1 */
  min-height: 2.4rem;
  padding-right: 0.6rem;
  padding-left: 0.6rem;
  cursor: pointer;
  background-color: #fff;
}

option:hover {
  background-color: #c4b6d4;
  color: #111;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: p
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
p {
  margin-bottom: 2.4rem;
  margin-top: 0;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: pre
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    Note: code is the most probable use for a `<pre>` tag. Other uses may occur (e.g. poem) but
    these could be adjusted with a class. Could maybe make this default configurable but leave as it
    is for now as it's likely that a poem would need a complete re-style (e.g. fonts etc.).

    1. Keep scrollbar visible to maintain vertical rhythm.
       Most browsers have a scrollbar height of 17px (calculated in settings section), however Edge
       appears to have a scrollbar height of 12px, so we override it with a hack.
    2. Correct the odd `em` font sizing in all browsers.
    3. Correct the inheritance and scaling of font size in all browsers.
*/
pre {
  overflow-x: scroll;
  /* 1 */
  overflow-y: auto;
  /* 1 */
  margin-bottom: 3.1rem;
  /* 1 */
  background-color: #ebe6f0;
  /*1 */
  font-size: 1em;
  /* 2 */
  font-family: monospace, monospace;
  /* 3 */
}

@supports (-ms-ime-align: auto) {
  pre {
    margin-bottom: 3.6rem;
    /* 1 */
  }
}

/*
        1. Revert zeroed line-height (see) `code`.
    */
pre code {
  display: inline-block;
  padding: 1.2rem;
  line-height: 2.4rem;
  /* 1 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: progress
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Add the correct vertical alignment in Chrome, Firefox, and Opera.
    2. Internet Explorer 11-, Windows Phone 8.1+
*/
progress {
  display: inline-block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: samp
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Address odd `em`-unit font size rendering in all browsers.
    2. Correct the inheritance and scaling of font size in all browsers.
    3. Prevent the element increasing the line-height of the parent.
*/
samp {
  font-size: 1em;
  /* 1 */
  font-family: monospace, monospace;
  /* 2 */
  line-height: 0;
  /* 3 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: section
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
section {
  display: block;
  margin-bottom: 2.4rem;
  margin-top: 0;
  padding-bottom: 2.4rem;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: select
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Using height because min-height doesn't change the expand button height in FF.
    2. Remove the tapping delay from clickable elements.
*/
select {
  height: 3rem;
  /* 1 */
  min-height: auto;
  margin: 0.3rem 0;
  border-width: 0.1rem;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.2);
  border-radius: 0.3rem;
  color: #111;
  background-color: #fff;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: 2.4rem;
  vertical-align: middle;
  text-transform: none;
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 2 (IE10) */
  touch-action: manipulation;
  /* 2 */
}

select::-ms-expand {
  background-color: transparent;
  color: #000;
  border: 0;
  padding-left: 0.6rem;
  padding-right: 0.6rem;
}

select::-ms-value {
  color: currentColor;
}

/*
    Make the arrow indicator the same across browsers.

    1. Give webkit extra padding.
       (not sure this is the best way but it seems FF and IE add the option padding, but webkit
       doesn't so this basically works)
    2. Note - FF needs any # (e.g. fill colors) to be %23 encoded.
    3. FF48- does not support background-position-x/y.
    4. FF34- does not remove the arrow but also does not show the background image until FF29-, at
       which point both are shown. However, removing the right-padding solves this (see below).
*/
select:not([multiple]) {
  padding-left: 0.3rem;
  -webkit-padding-start: 0.6rem;
  /* 1 */
  padding-right: 2.4rem;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 4.95 10" fill="%23444"><polygon points="1.41 4.67 2.48 3.18 3.54 4.67 1.41 4.67"/><polygon points="3.54 5.33 2.48 6.82 1.41 5.33 3.54 5.33"/></svg>');
  /* 2 */
  background-repeat: no-repeat;
  background-position: right 0.3em bottom 0;
  /* 3 */
  -moz-appearance: none;
  /* 4 */
  -webkit-appearance: none;
  appearance: none;
}

/*
    We need to remove right padding before FF34, but there isn't a hack for that.
    So instead, remove for all FireFox ...
*/
_:-moz-tree-row(hover), select:not([multiple]) {
  padding-right: 0;
}

/*
    ... and reinstate for FF35+
*/
@supports (-moz-appearance: none) and (mask-type: alpha) {
  select:not([multiple]) {
    padding-right: 2.4rem;
  }
}

/*
    Undo custom arrow indicator for IE9-11:
*/
/* IE9-11 */
@media screen and (min-width: 0\0) and (min-resolution: +72dpi) {
  select:not([multiple]) {
    background-image: none\0;
    padding-right: 0\0;
  }
}

select:focus {
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
  outline: 0;
}

/*
    Note that Opera 25- and Safari(all - 11 latest at time of writing) treat select [size]s of
    less than 4 as 4.
*/
select[multiple] {
  height: auto;
  vertical-align: top;
  margin-top: 0.3rem;
  margin-right: 0;
  margin-bottom: -moz-calc(0.9rem - 0.2rem);
  margin-bottom: calc(0.9rem - 0.2rem);
  margin-left: 0;
}

/*
    Apply padding to fudge height in Safari (we need to apply to iOS)...
*/
_::-webkit-full-page-media, _:future, :root select[multiple] {
  margin-bottom: 0;
  padding: 0.2rem;
}

/*
    ... but reset for Mac Safari .
*/
_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[multiple] {
  margin-bottom: calc(0.9rem - 0.2rem);
  padding: 0;
}

/*
    Various browsers do not allow <option>s height to be specified.
    The ones I've found are:

    * IE11-
    * Chrome 38-
    * Opera 24-

    MAYBE NOT FOR PRODUCTION?
    The following techniques are messy and break if the font-family or font size changes.
    Maybe move them to the test CSS only so I can see if OTHER elements are falling off the grid.
*/
/* Individual height fixes moved to '_start-experimental.scss' */
/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: small
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Apply consistent small font size in all browsers.
    2. Prevent the element increasing the line-height of the parent.
*/
small {
  font-size: 81.25%;
  /* 1 */
  line-height: normal;
  /* 2 */
  /*
    a[href] {
        margin-bottom: $s__anchor-border-bottom-offset / 2;

        padding-bottom: $s__anchor-padding-bottom / 2;

        border-bottom: 0.1rem $s__anchor-border-bottom-style;
    }
    
    a[href]:hover,
    a[href]:focus,
    a[href]:active {
        border-bottom: 0.1rem $s__anchor-border-bottom-style--alt;
    }
    */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: strong
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Add the correct font weight in Chrome, Edge, and Safari.
    2. Prevent increase in line-height.
*/
strong {
  font-weight: bolder;
  /* 1 */
  line-height: normal;
  /* 2 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: sub
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    Prevent `sub` affecting `line-height` in all browsers.
*/
sub {
  position: relative;
  bottom: -0.25em;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: summary
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Correct display in unsupported browsers (https://caniuse.com/#feat=details).
    2. Remove the tapping delay from clickable elements.
*/
summary {
  display: block;
  /* 1 */
  -ms-touch-action: manipulation;
  /* 2 (IE10) */
  touch-action: manipulation;
  /* 2 */
  cursor: pointer;
  margin-bottom: 0;
  margin-top: 0;
}

summary:focus {
  outline: 2px solid rgba(93, 71, 119, 0.6);
  outline-offset: 2px;
}

/* Hide the details marker as we're supplying our own. */
summary::-webkit-details-marker {
  display: none;
}

details > summary::before {
  display: inline-block;
  content: '\25BA';
  margin-left: -1.4em;
  margin-right: 0.4em;
  font-size: 0.75em;
  font-family: serif;
  vertical-align: top;
  transition: transform 0.2s ease;
}

details[open] > summary {
  margin-bottom: 2.4rem;
  margin-top: 0;
}

details[open] > summary::before {
  transform: rotate(90deg);
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: sup
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    Prevent `sup` affecting `line-height` in all browsers.
*/
sup {
  position: relative;
  top: -0.5em;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: svg
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Change the fill color to match the text color in all browsers.
       (needs more testing)
       
    2. iOS7 (at least) adds a mystery top margin.
*/
svg {
  vertical-align: middle;
  fill: currentColor;
  /* 1 */
  margin-top: 0;
}

/*
    1. Correct overflow not hidden in IE 9-11.
*/
svg:not(:root) {
  overflow: hidden;
  /* 1 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: table
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Opera Mini (no calc support).
    2. Calc to deduct any border-width.
*/
table {
  width: 100%;
  /* @TODO - possibly make this configurable to be 'natural' width but centered instead. (http://alistapart.com/article/web-typography-tables) */
  border-collapse: collapse;
  margin-bottom: 2.4rem;
  /* 1 */
  margin-bottom: calc(2.4rem - 0.1rem);
  /* 2 */
  margin-top: 0;
  border: 0.1rem solid #5d4777;
  background-color: transparent;
  border-spacing: 0;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: td
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Opera Mini (no calc support).
    2. Calc to deduct any border-width.
*/
td {
  padding-top: 1.2rem;
  padding-right: 1.2rem;
  padding-bottom: 1.2rem;
  /* 1 */
  padding-bottom: calc(1.2rem - 0.1rem);
  /* 2 */
  padding-left: 1.2rem;
  border: 0.1rem solid #5d4777;
  background-color: transparent;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: template
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Hide `template` in unsupported browsers (https://caniuse.com/#feat=template)
*/
template {
  display: none;
  /* 1 */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: textarea
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. For IE, mainly.
    2. Edge 12+, Internet Explorer 11-. Without this it acts like overflow: scroll.
    3. Remove the margin in Firefox and Safari.
    4. Keep labels at the top of the container.
    5. Remove the tapping delay from clickable elements.
    5a. IE 10.
*/
textarea {
  min-height: 8.2rem;
  /* 1 */
  overflow: auto;
  /* 2 */
  margin-top: 0.2rem;
  margin-bottom: 0;
  /* 3 */
  padding-left: 0.6rem;
  padding-right: 0.6rem;
  border-width: 0.1rem;
  border-radius: 0.3rem;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: solid;
  color: #111;
  background-color: #fff;
  font-size: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit;
  vertical-align: top;
  /* 4 */
  -ms-touch-action: manipulation;
  /* 5a */
  touch-action: manipulation;
  /* 5 */
  resize: vertical;
}

textarea:focus {
  box-shadow: 0 0 0 3px rgba(93, 71, 119, 0.5);
  outline: 0;
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: th
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Opera Mini (no calc support).
    2. Calc to deduct any border-width.
*/
th {
  padding-top: 1.2rem;
  padding-right: 1.2rem;
  padding-bottom: 1.2rem;
  /* 1 */
  padding-bottom: calc(1.2rem - 0.1rem);
  /* 2 */
  padding-left: 1.2rem;
  border: 0.1rem solid #5d4777;
  background-color: rgba(93, 71, 119, 0.3);
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: ul
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Either of these will make lists behave properly next to floated items.
       (https://paulbakaus.com/tutorials/css/block-formatting-contexts-and-lists)
       a. This causes problems with some decoration. E.g. if the last element in the list is a link,
          bottom borders get cropped, so using b instead.
       b. `flow-root` is the better option but support is low, so using table.
          Edge breaks if flow-root is applied, even though it's meant to be ignored.
          -moz-box / flex causes numbering to mess up (always 0) on FF8-50.
          This is the only thing that works in early FF. However, width is content-width, not
          available width so any 'boxy' decoration on the list might look weird.
          Flex based options cause other problems, i.e. not wrapping properly.

*/
ul {
  margin-bottom: 2.4rem;
  margin-top: 0;
  display: table;
  /* 1b */
}

/*-------------------------------------------------------------------------------------------------|

    START-CSS ELEMENT: video
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    1. Allow video to center if container larger than video.
*/
video {
  display: block;
  /* 1 */
  max-width: 100%;
  height: auto;
  margin: 0 auto;
  /* 1 */
  background-color: #333;
}

/*
    Utilities and other miscellaneous bits:
*/
/*
    1. Remove the tapping delay from clickable elements.
*/
[tabindex] {
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
}

/*
    Specify the background color, font color, and drop shadow of text selections.
*/
::-moz-selection,
::selection {
  color: #fff;
  background-color: #aa96c1;
  text-shadow: none;
}

/*
    Highlight :target-ed headings
    Note I can't selected the whole section without it being wrapped in something, and I don't want
    to mess around with that.
*/
main :target {
  -moz-animation: target-fade 3s 1;
  -webkit-animation: target-fade 3s 1;
  animation: target-fade 3s 1;
}

@-moz-keyframes target-fade {
  0% {
    background-color: rgba(170, 150, 193, 0.4);
    box-shadow: 0 0 0 1.2rem rgba(170, 150, 193, 0.4);
  }
  100% {
    background-color: rgba(170, 150, 193, 0);
    box-shadow: 0 0 0 1.2rem rgba(170, 150, 193, 0);
  }
}

@-webkit-keyframes target-fade {
  0% {
    background-color: rgba(170, 150, 193, 0.4);
    box-shadow: 0 0 0 1.2rem rgba(170, 150, 193, 0.4);
  }
  100% {
    background-color: rgba(170, 150, 193, 0);
    box-shadow: 0 0 0 1.2rem rgba(170, 150, 193, 0);
  }
}

@keyframes target-fade {
  0% {
    background-color: rgba(170, 150, 193, 0.4);
    box-shadow: 0 0 0 1.2rem rgba(170, 150, 193, 0.4);
  }
  100% {
    background-color: rgba(170, 150, 193, 0);
    box-shadow: 0 0 0 1.2rem rgba(170, 150, 193, 0);
  }
}

/*
    Give some space to elements targeted by fragments:
*/
[id] {
  scroll-margin-top: 4.8rem;
}

/*
        Some inline elements have margin deliberately to help with size/position.
        We don't want to zero-out those.
    */
:last-child:not(a):not(button):not(img):not(input):not(select) {
  margin-bottom: 0;
}

/* Alt margins */
/*
Shelving this for now
@if $s__procedural-margins == false {
    /* this is too generic 
    * + * {
        margin-top: $s__base-rem-space-unit;
    }
    /
    
    /* This is the full list but it's not exactly what we want:
    * + address,
    * + article,
    * + aside,
    * + blockquote,
    * + details,
    * + dialog,
    * + dd,
    * + div,
    * + dl,
    * + dt,
    * + fieldset,
    * + figcaption,
    * + figure,
    * + footer,
    * + form,
    * + h1,
    * + h2,
    * + h3,
    * + h4,
    * + h5,
    * + h6,
    * + header,
    * + hgroup,
    * + hr,
    * + li,
    * + main,
    * + nav,
    * + ol,
    * + p,
    * + pre,
    * + section,
    * + table,
    * + ul
    /
    
    /*
        Taking out list items, hr and div:
    /
    *:not(legend):not(figcaption) + address,
    *:not(legend):not(figcaption) + article,
    *:not(legend):not(figcaption) + aside,
    *:not(legend):not(figcaption) + blockquote,
    *:not(legend):not(figcaption) + details,
    *:not(legend):not(figcaption) + dialog,
    *:not(legend):not(figcaption) + dl,
    *:not(legend):not(figcaption) + fieldset,
    *:not(legend):not(figcaption) + figure,
    *:not(legend):not(figcaption) + footer,
    *:not(legend):not(figcaption) + form,
    *:not(legend):not(figcaption) + h1,
    *:not(legend):not(figcaption) + h2,
    *:not(legend):not(figcaption) + h3,
    *:not(legend):not(figcaption) + h4,
    *:not(legend):not(figcaption) + h5,
    *:not(legend):not(figcaption) + h6,
    *:not(legend):not(figcaption) + header,
    *:not(legend):not(figcaption) + hgroup,
    *:not(legend):not(figcaption) + main,
    *:not(legend):not(figcaption) + nav,
    *:not(legend):not(figcaption) + ol,
    *:not(legend):not(figcaption) + p,
    *:not(legend):not(figcaption) + pre,
    *:not(legend):not(figcaption) + section,
    *:not(legend):not(figcaption) + table,
    *:not(legend):not(figcaption) + ul {
        margin-top: $s__base-rem-space-unit;
    }
    
    hr {
        margin-top: calc(2.4rem - 0.1rem;
    }
} 
*/
/*! Start-CSS Accessibility. See SCSS file for documentation. */
/*-------------------------------------------------------------------------------------------------|

    ACCESSIBILITY / ARIA
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
[aria-busy="true"] {
  cursor: progress;
}

/*
    Specify the pointer cursor of trigger elements. (S)
*/
[aria-controls] {
  cursor: pointer;
}

/*
    Specify the un-styled cursor of disabled, not-editable, or otherwise inoperable elements. (S)
*/
[disabled],
[aria-disabled] {
  cursor: default;
}

/*
    Address `[hidden]` styling not present in IE 8/9/10. (N)
*/
[hidden] {
  display: none;
}

/*
    Specify the style of visually hidden yet accessible elements. (S)
*/
[hidden="false"][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  position: absolute;
  display: inline;
  /*border: 0;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    width: 1px;*/
}

a[hidden="false"][aria-hidden="false"]:focus,
a[hidden="false"][aria-hidden="false"]:active {
  clip: auto;
  position: static;
  /*height: auto;
        margin: 0;
        overflow: visible;
        width: auto;*/
}

/*
    Elements with tabindex="-1" are NOT user focussable, but CAN be focussed via JS.
    In this case elements focussed in such a way should not receive focus styles to avoid confusion.
    (https://inclusive-components.design/a-todo-list#focusmanagement)
*/
[tabindex="-1"] {
  outline: none;
}

/*
    A blanket attempt to respect prefers-reduced-motion.
    (https://dev.to/alvaromontoro/consider-reducing-motions-1a13)
*/
@media (prefers-reduced-motion: reduce) {
  * {
    animation: none !important;
    transition: none !important;
  }
}

/*! Start-CSS Experimental. See SCSS file for documentation. */
/*-------------------------------------------------------------------------------------------------|

    EXPERIMENTAL
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    These may be experimental, but they actually make Safari usable with a keyboard, so long as
    you enable an "Accessibility" setting located in the advanced tab of Safari preferences.
    ("Press TAB to highlight each item on a web page.)
    That is - the default outline focus style works, but shadows don't unless appearance: none
    is used.
    
    1. Safari 9.1 doesn't recognize 'auto' but I suspect others won't recognize 'initial', so
       keeping both for now.
*/
/*! End Start-CSS */
/*! Start-CSS Accessibility. See SCSS file for documentation. */
/*-------------------------------------------------------------------------------------------------|

    ACCESSIBILITY / ARIA
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
[aria-busy="true"] {
  cursor: progress;
}

/*
    Specify the pointer cursor of trigger elements. (S)
*/
[aria-controls] {
  cursor: pointer;
}

/*
    Specify the un-styled cursor of disabled, not-editable, or otherwise inoperable elements. (S)
*/
[disabled],
[aria-disabled] {
  cursor: default;
}

/*
    Address `[hidden]` styling not present in IE 8/9/10. (N)
*/
[hidden] {
  display: none;
}

/*
    Specify the style of visually hidden yet accessible elements. (S)
*/
[hidden="false"][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  position: absolute;
  display: inline;
  /*border: 0;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    width: 1px;*/
}

a[hidden="false"][aria-hidden="false"]:focus,
a[hidden="false"][aria-hidden="false"]:active {
  clip: auto;
  position: static;
  /*height: auto;
        margin: 0;
        overflow: visible;
        width: auto;*/
}

/*
    Elements with tabindex="-1" are NOT user focussable, but CAN be focussed via JS.
    In this case elements focussed in such a way should not receive focus styles to avoid confusion.
    (https://inclusive-components.design/a-todo-list#focusmanagement)
*/
[tabindex="-1"] {
  outline: none;
}

/*
    A blanket attempt to respect prefers-reduced-motion.
    (https://dev.to/alvaromontoro/consider-reducing-motions-1a13)
*/
@media (prefers-reduced-motion: reduce) {
  * {
    animation: none !important;
    transition: none !important;
  }
}

/*! Start CSS Icons. See SCSS file for documentation. */
/*------------------------------------------------------------------------------------------------*\

    Icons

\*------------------------------------------------------------------------------------------------*/
/*

    This default icon set used Feather Icons (https://feathericons.com/)
    If you want to use a different icon set, omit the @import declaration for this file and replace
    it with a custom one.
    
    The markup here is based on this article:
    [Accessible SVG Icons with Inline Sprites](https://www.24a11y.com/2018/accessible-svg-icons-with-inline-sprites/)

    <!-- At the top of each page: -->
    <svg xmlns="http://www.w3.org/2000/svg" display="none">
        <style>
            svg[focusable="false"][role="img"][aria-labelledby],
            svg[focusable="false"][aria-hidden="true"] {
                fill: none;
                fill-opacity: 0;
                stroke: currentColor;
                stroke-width: 2;
                stroke-linecap: round;
                stroke-linejoin: round;
                width: 1.25em;
                height: 1.25em;
                margin: 0;
                padding: 0;
                vertical-align: text-bottom;
            }
        </style>
        <symbol id="icon-building" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
            <polyline points="9 22 9 12 15 12 15 22"/>
        </symbol>
        <symbol id="icon-calendar" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"/>
            <line x1="16" y1="2" x2="16" y2="6"/>
            <line x1="8" y1="2" x2="8" y2="6"/>
            <line x1="3" y1="10" x2="21" y2="10"/>
        </symbol>
        <symbol id="icon-chevron-down" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <polyline points="6 9 12 15 18 9"/>
        </symbol>
        <symbol id="icon-chevron-up" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <polyline points="18 15 12 9 6 15"/>
        </symbol>
        <symbol id="icon-chevron-left" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <polyline points="15 18 9 12 15 6"/>
        </symbol>
        <symbol id="icon-chevron-right" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <polyline points="9 18 15 12 9 6"/>
        </symbol>
        <symbol id="icon-cross" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <line x1="18" y1="6" x2="6" y2="18"/>
            <line x1="6" y1="6" x2="18" y2="18"/>
        </symbol>
        <symbol id="icon-edit" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"/>
        </symbol>
        <symbol id="icon-email" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
            <polyline points="22,6 12,13 2,6"/>
        </symbol>
        <symbol id="icon-facebook" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"/>
        </symbol>
        <symbol id="icon-fax" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path class="st0" d="M6,18H4c-1.1,0-2-0.7-2-1.6v-4c0-0.9,0.9-1.6,2-1.6h16c1.1,0,2,0.7,2,1.6v4c0,0.9-0.9,1.6-2,1.6h-2"/>
            <rect x="6" y="14" class="st0" width="12" height="8"/>
            <path class="st0" d="M6,7.4L4.8,6.2C4.4,5.7,4.4,5,4.8,4.6c0,0,0.1,0,0.1-0.1c1.4-1.1,3-1.9,4.7-2.2c1.6-0.4,3.2-0.4,4.8,0 c1.7,0.4,3.3,1.1,4.7,2.2c0.5,0.4,0.5,1.1,0.1,1.6c0,0,0,0.1-0.1,0.1L18,7.4c-0.4,0.4-1,0.5-1.5,0.1c-0.4-0.3-0.9-0.6-1.4-0.8 c-0.4-0.2-0.7-0.6-0.7-1v-1c-1.6-0.4-3.2-0.4-4.8,0v1c0,0.4-0.3,0.8-0.7,1C8.4,6.9,8,7.2,7.5,7.5C7.1,7.8,6.4,7.8,6,7.4z"/>
        </symbol>
        <symbol id="icon-file" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"/>
            <polyline points="13 2 13 9 20 9"/>
        </symbol>
        <symbol id="icon-info" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <circle cx="12" cy="12" r="10"/>
            <line x1="12" y1="16" x2="12" y2="12"/>
            <line x1="12" y1="8" x2="12.01" y2="8"/>
        </symbol>
        <symbol id="icon-linkedin" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >            
            <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"/>
            <rect x="2" y="9" width="4" height="12"/>
            <circle cx="4" cy="4" r="2"/>
        </symbol>
        <symbol id="icon-menu" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <line x1="3" y1="12" x2="21" y2="12"/>
            <line x1="3" y1="6" x2="21" y2="6"/>
            <line x1="3" y1="18" x2="21" y2="18"/>
        </symbol>
        <symbol id="icon-person" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
            <circle cx="12" cy="7" r="4"/>
        </symbol>
        <symbol id="icon-phone" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
        </symbol>
        <symbol id="icon-rss" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path class="st0" d="M5.6,9.1c4,0,7.2,3.2,7.2,7.2"/><path class="st0" d="M5.6,3.5c7,0,12.8,5.7,12.8,12.8"/><circle class="st0" cx="6.4" cy="15.5" r="0.8"/>
        </symbol>
        <symbol id="icon-search" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <circle cx="10.5" cy="10.5" r="7.5"/>
            <line x1="21" y1="21" x2="15.8" y2="15.8"/>
        </symbol>
        <symbol id="icon-twitter" viewBox="0 0 24 24"
            fill="none" fill-opacity="0" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"        
        >
            <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"/>
        </symbol>
     </svg>



    <!-- Where it's needed: -->
    <svg display="none" class="icon" aria-label="Spoken label"><use xlink:href="#icon-triangle-down"></use></svg>
    <!-- Note the aria-label can be removed if equivalent text is already present or the icon is visual only -->

*/
/*
        1. Override display attribute.
        2. FF55- otherwise fill is applied.
    */
.icon {
  display: inline;
  /* [1] */
  fill: none;
  fill-opacity: 0;
  /* [2] */
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  width: 1.25em;
  height: 1.25em;
  margin: 0;
  padding: 0;
}

_:-o-prefocus, :root .icon {
  vertical-align: middle;
}

.icon-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

/*! Start-CSS Experimental. See SCSS file for documentation. */
/*-------------------------------------------------------------------------------------------------|

    EXPERIMENTAL
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/
/*
    These may be experimental, but they actually make Safari usable with a keyboard, so long as
    you enable an "Accessibility" setting located in the advanced tab of Safari preferences.
    ("Press TAB to highlight each item on a web page.)
    That is - the default outline focus style works, but shadows don't unless appearance: none
    is used.
    
    1. Safari 9.1 doesn't recognize 'auto' but I suspect others won't recognize 'initial', so
       keeping both for now.
*/
/* --| THEME |----------------------------------------------------------------------------------- */
/**/
:root {
  --t-text-color: #111;
  --t-text-color-inverse: #fff;
  --t-light-adjust: 0.7;
  --t-very-light-adjust: 0.92;
  --t-dark-adjust: 0.7;
  --t-very-dark-adjust: 0.5;
  --t-primary-color: #5F4776;
  /* hsl(271, 25%, 37%) */
  --t-primary-color-h: 271deg;
  --t-primary-color-s: 25%;
  --t-primary-color-l: 37%;
  --t-primary-color-l-copy: 37%;
  /* Declared twice so it can be part of a lightening calculation) */
  --t-primary-fore-text-color: #fff;
  /* SASS would generate this from the base colour. */
  --t-secondary-color: #2c9cdf;
  /* hsl(202, 74%, 53%) */
  --t-secondary-color-h: 202;
  --t-secondary-color-s: 74%;
  --t-secondary-color-l: 53%;
  --t-secondary-color-l-copy: 53%;
  /* Declared twice so it can be part of a lightening calculation) */
  --t-secondary-fore-text-color: var(--t-text-color);
  /* SASS would generate this from the base colour. */
  --t-neutral-color: #8e8279;
  /* hsl(26, 9%, 52%) */
  --t-neutral-color-h: 26;
  --t-neutral-color-s: 9%;
  --t-neutral-color-l: 52%;
  --t-neutral-color-l-copy: 52%;
  /* Declared twice so it can be part of a lightening calculation) */
  --t-neutral-fore-text-color: var(--t-text-color);
  /* SASS would generate this from the base colour. */
  /*
        Without being able to perform a calc in the hsl function (grrr IE11 even with polyfill) we
        need to create adjusted -l values in SASS (stylesheet) and/or php (on-page themer)
    */
  --t-primary-color-l--very-light: 95%;
  --t-primary-color-l--light: 81%;
  --t-primary-color-l--dark: 26%;
  --t-primary-color-l--very-dark: 18%;
  --t-secondary-color-l--very-light: 96%;
  --t-secondary-color-l--light: 86%;
  --t-secondary-color-l--dark: 37%;
  --t-secondary-color-l--very-dark: 27%;
  --t-neutral-color-l--very-light: 96%;
  --t-neutral-color-l--light: 86%;
  --t-neutral-color-l--dark: 36%;
  --t-neutral-color-l--very-dark: 26%;
  /**/
}

/* --| Component Patterns |---------------------------------------------------------------------- */
/*

*/
.c-badge {
  /*
        1. For positioned pseudo elements, e.g. External indicator.
        2. For IE11
    */
  /*
    &.c-badge--circle {
        border-radius: 50%;
        overflow: hidden;
    }

    &.c-badge--rounded {
        border-radius: 0.2em;
        overflow: hidden;
    }
    */
}

.c-badge.c-badge {
  display: inline-block;
  vertical-align: middle;
  position: relative;
  /* [1] */
  max-width: 100%;
  /* [2] */
  border: 0;
  padding: 0;
  margin: 0;
}

.c-badge svg {
  max-width: 100%;
}

.c-badge img {
  /*
                1. This is to provide positioning context for the ::after pseudo-element.
                2. This is so a broken image is still 100%.
                3. -- Center in container. -- don't think this is necessary until find example
                   breaks IE11 so need to overridide it below if keeping.
            */
  position: relative;
  /* [1] */
  display: block;
  /* [2] */
  width: 100%;
  max-width: 100%;
  border-style: none;
  background-color: transparent;
  /* margin: 0 auto; /* [3] */
  margin: 0;
}

.c-badge.c-badge--limit-height img, .c-badge.c-badge--limit-height--8 img {
  max-height: 8rem;
}

.c-badge.c-badge--limit-height--4 img {
  max-height: 4rem;
}

.c-badge.c-badge--limit-height--6 img {
  max-height: 6rem;
}

.c-badge.c-badge--limit-height--10 img {
  max-height: 10rem;
}

.c-badge.c-badge--limit-height--12 img {
  max-height: 12rem;
}

.c-badge.c-badge--limit-height--m img {
  max-height: 2.4rem;
}

.c-badge.c-badge--limit-height--l img {
  max-height: 4.8rem;
}

.c-badge.c-badge--limit-height--xl img {
  max-height: 9.6rem;
}

.c-badge.c-badge--limit-height--xxl img {
  max-height: 19.2rem;
}

.c-badge.c-badge--small {
  height: 2em;
  width: 2em;
}

.c-badge.c-badge--small img {
  width: 100%;
  height: 100%;
}

.c-badge.c-badge--decorated {
  position: relative;
  padding: 2.4rem;
  height: 100%;
}

.c-badge.c-badge--decorated::before {
  content: "";
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  opacity: 0.05;
  background-color: currentColor;
}

.c-badge.c-badge--decorated::after {
  content: "";
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  border-width: 0.3rem;
  border-style: solid;
  border-color: currentColor;
}

.c-badge.c-badge--page-brand img {
  display: block;
  margin: 0 auto;
  max-height: 8.4rem;
}

a[href].c-badge:hover, a[href].c-badge:active, a[href].c-badge:focus {
  border: 0;
  box-shadow: 0 0 0 0.6rem #fff, 0 0 0 1.2rem rgba(0, 0, 0, 0.2);
}

a[href].c-badge:hover img, a[href].c-badge:active img, a[href].c-badge:focus img {
  box-shadow: none;
}

a[href].c-badge img {
  border: 0;
}

a[href][rel~="external"].c-badge::after {
  display: none;
}

a[href][rel~="external"].c-badge:hover::after,
a[href][rel~="external"].c-badge:active::after,
a[href][rel~="external"].c-badge:focus::after {
  position: absolute;
  right: -1em;
  top: -1em;
  width: 1.25em;
  height: 1.25em;
  display: block;
  margin: 0;
}

/*
    IE10-11

    1. IE11- seems to need this.
    ... Or, maybe not!?!?! Weird. 03/09/2020 - taken this out.
    UGGGGH - needs it in the banner badges, but not badge list badges.
*/
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .c-badge {
    /*
            For some reason flex images size differently in IE11, so we need to multiply these
            values by 1.666 !!! but only in the header. Footer logos behave properly.
            I can't figure out what's causing the difference, so scoping to the header for now.
        */
    /*.c-page-header__affiliate_logos &.c-badge--limit-height,
        .c-page-header__affiliate_logos &.c-badge--limit-height--8 {
            img {
                max-height: 8rem * 1.666;
            }
        }

        .c-page-header__affiliate_logos &.c-badge--limit-height--4 {
            img {
                max-height: 4rem * 1.666;
            }
        }

        .c-page-header__affiliate_logos &.c-badge--limit-height--6 {
            img {
                max-height: 6rem * 1.666;
            }
        }

        .c-page-header__affiliate_logos &.c-badge--limit-height--10 {
            img {
                max-height: 10rem * 1.666;
            }
        }

        .c-page-header__affiliate_logos &.c-badge--limit-height--12 {
            img {
                max-height: 12rem * 1.666;
            }
        }*/
  }
  .c-badge svg {
    width: 100%;
  }
  /*
        Undo rule set above (commented out currently until I'm sure)
    */
  /*a[href].c-badge img {
        margin: 0;
    }*/
}

/*
*/
.c-page-wrap.c-page-wrap {
  max-width: 1600px;
  margin: 0 auto;
  background-color: #fff;
}

/* ---------------------------------------------------------------------------------------------- */
/* --| Layout Patterns |------------------------------------------------------------------------- */
/*
    Base Layout
    ===========

    This file establishes classes and variables for use in all other specific layouts, and helps to
    clarify how layout should be used.

    Rules
    ----

    * Layout is independent of decoration.
    * Layouts consist of two wrappers and one or more layout boxes.
    * The specific layout determines how these boxes should behave and arrange themselves.

*/
.l-box,
.l-layout,
.l-layout__inner {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  list-style-type: none;
}

.l-layout__inner {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
  align-items: stretch;
}

.l-box {
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: auto;
  min-width: 100%;
}

.l-gutter--s > .l-layout__inner {
  padding: 0.6rem;
}

.l-gutter--s > .l-layout__inner > .l-box {
  padding: 0.6rem;
}

.l-gutter > .l-layout__inner,
.l-gutter--m > .l-layout__inner {
  padding: 1.2rem;
}

.l-gutter > .l-layout__inner > .l-box,
.l-gutter--m > .l-layout__inner > .l-box {
  padding: 1.2rem;
}

.l-gutter--l > .l-layout__inner {
  padding: 2.4rem;
}

.l-gutter--l > .l-layout__inner > .l-box {
  padding: 2.4rem;
}

.l-flush-edge-gutter {
  overflow: hidden;
}

.l-gutter--s.l-flush-edge-gutter > .l-layout__inner {
  margin: -1.2rem;
}

.l-gutter.l-flush-edge-gutter > .l-layout__inner,
.l-gutter--m.l-flush-edge-gutter > .l-layout__inner {
  margin: -2.4rem;
}

.l-gutter--l.l-flush-edge-gutter > .l-layout__inner {
  margin: -4.8rem;
}

.l-layout.l-basis-15 > .l-layout__inner > .l-box {
  flex-basis: 15rem;
  --b: 15rem;
}

.l-layout.l-basis-20 > .l-layout__inner > .l-box {
  flex-basis: 20rem;
  --b: 20rem;
}

.l-layout.l-basis-25 > .l-layout__inner > .l-box {
  flex-basis: 25rem;
  --b: 25rem;
}

.l-layout.l-basis-30 > .l-layout__inner > .l-box {
  flex-basis: 30rem;
  --b: 30rem;
}

.l-layout.l-basis-35 > .l-layout__inner > .l-box {
  flex-basis: 35rem;
  --b: 35rem;
}

/*    Distribute Layout    =================    Distribute items inside a container.*/
.l-layout.l-distribute > .l-layout__inner > .l-box {
  flex-grow: 0;
  min-width: auto;
}

.l-layout.l-distribute.l-distribute--balance-bottom > .l-layout__inner > .l-box {
  flex-grow: 1;
}

@supports (width: max(1px, 1px)) {
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner {
    --bp1: 90rem;
    --bp1-2: 110rem;
    --bp2: 130em;
    /* 1 or more: */
    /* 2 or more: */
    /* 3 or more: - note this should be part of col-to-row*/
    /*& > .l-box:nth-last-child(n+3),            & > .l-box:nth-last-child(n+3) ~ * {                //flex-basis: unquote("max(33%, (var(--bp1) - 100%) * 999)");                flex-basis: unquote("max(33%, ((var(--b) * 3) - 100%) * 999)");            }*/
    /* 3 or more: */
    /* 3 or more, different values for the first one: */
    /* 4 or more: */
    /*            From here on in there are increasingly more possibilities on how things can be laid out.            More items = more possibilities. I've tried to go for what I consider to be the most balanced option but almost all other possibilities are achievable.            */
    /* 5 or more: */
    /* 5 or more, different values for the first two: */
    /* 5 or more, different values for the first one: */
    /* 6 or more: */
    /* 6 or more, different values for the first two: */
    /*& > .l-box:nth-last-child(n+6),            & > .l-box:nth-last-child(n+6) + * {                flex-basis: unquote("min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999), max(50%, ((var(--b) * 4) - 100%) * 999), max(20%, ((var(--b) * 5) - 100%) * 999), max(16%, ((var(--b) * 6) - 100%) * 999))");            }*/
    /* 6 or more, different values for the first one: */
    /*& > .l-box:nth-last-child(n+6) {                flex-basis: unquote("min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999), max(50%, ((var(--b) * 4) - 100%) * 999), max(100%, ((var(--b) * 5) - 100%) * 999), max(16%, ((var(--b) * 6) - 100%) * 999))");            }*/
    /*                It's worth noting here that things get especially tricky and messy. We've already seen                with 6 we've had to skip some steps, and things like 7 and 11 are quite hard too.                Also with ANY amount, the practicalities of allowing all arrangements up to a single                row become limiting.                If you assume you have items that are quite small - and can therefore fit into a single                row - a small reduction in available width that causes wrapping would leave a very large                item on it's own row. This is the whole reason we want to balance things in the first                place, so that this doesn't happen - we want a reduction in available width that causes                wrapping to lead to MORE items being wrapped and thus creating a better balance.                It's just very hard to know where things SHOULD land.            */
    /* 7 or more: (1x7 | 1,2x3 | 1,3x2 | 3,4) */
    /* 7 or more, different values for the second and third: */
    /* 7 or more, different values for the first one: */
    /* 8 or more: */
    /* 9 or more: */
    /* 9 or more, different values for the first one: */
    /* 10 or more: */
    /* 11 or more: */
    /* 11 or more, different values for the second one: */
    /* 11 or more, different values for the first one: */
    /* 11 or more, different values for the next 3 ...: */
    /*& > .l-box:nth-last-child(n+11) ~ :nth-child(5),            & > .l-box:nth-last-child(n+11) ~ :nth-child(5) ~ * {                flex-basis: unquote("max(33%, (var(--bp2) - 100%) * 999)");            }            */
    /* 11 or more, different values for the last 4 ...: */
    /*& > .l-box:nth-last-child(n+11) ~ :nth-child(7),            & > .l-box:nth-last-child(n+11) ~ :nth-child(7) ~ * {                flex-basis: unquote("max(25%, (var(--bp2) - 100%) * 999)");            }*/
    /* 12 or more: double class to boost specificity - ugh.*/
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box {
    flex-basis: 100%;
    flex-grow: 1;
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+2),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+2) ~ * {
    flex-basis: max(50%, ((var(--b) * 2) - 100%) * 999);
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+3),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+3) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+3) {
    flex-basis: max(33%, ((var(--b) * 3) - 100%) * 999);
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+4),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+4) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(25%, ((var(--b) * 4) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+5),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+5) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999), max(25%, ((var(--b) * 4) - 100%) * 999), max(20%, ((var(--b) * 5) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+5),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+5) + * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(20%, ((var(--b) * 5) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+5) {
    flex-basis: min(max(50%, ((var(--b) * 3) - 100%) * 999), max(100%, ((var(--b) * 4) - 100%) * 999), max(20%, ((var(--b) * 5) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+6),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+6) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999), max(16%, ((var(--b) * 6) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+7),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+7) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999), max(25%, ((var(--b) * 4) - 100%) * 999), max(14%, ((var(--b) * 7) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+7) + *,
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+7) + * + * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999), max(14%, ((var(--b) * 7) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+7) {
    flex-basis: min(max(33%, ((var(--b) * 4) - 100%) * 999), max(14%, ((var(--b) * 7) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+8),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+8) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(25%, ((var(--b) * 4) - 100%) * 999), max(12%, ((var(--b) * 8) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+9),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+9) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999), max(11%, ((var(--b) * 9) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+9) {
    flex-basis: min(max(33%, ((var(--b) * 3) - 100%) * 999), max(11%, ((var(--b) * 9) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+10),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+10) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2)- 100%) * 999), max(20%, ((var(--b) * 5) - 100%) * 999), max(10%, ((var(--b) * 10) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+11),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+11) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999), max(9%, ((var(--b) * 11) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+11) + * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(9%, ((var(--b) * 11) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+11) {
    flex-basis: min(max(50%, ((var(--b) * 3) - 100%) * 999), max(9%, ((var(--b) * 11) - 100%) * 999));
  }
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+12),
  .l-layout.l-distribute.l-distribute--balance-top > .l-layout__inner > .l-box:nth-last-child(n+12) ~ * {
    flex-basis: min(max(50%, ((var(--b) * 2) - 100%) * 999), max(33%, ((var(--b) * 3) - 100%) * 999), max(25%, ((var(--b) * 4) - 100%) * 999), max(16%, ((var(--b) * 6) - 100%) * 999), max(8%, ((var(--b) * 12) - 100%) * 999));
  }
}

/* ---------------------------------------------------------------------------------------------- */
/* --| Special Patterns |------------------------------------------------------------------------ */
/*
    Fab Four Widths

    https://medium.freecodecamp.com/the-fab-four-technique-to-create-responsive-emails-without-media-queries-baf11fdfa848#.dtpllw1lf
    https://www.sitepoint.com/responsive-css-patterns-without-media-queries/

*/
.ff-width-100--10--20 {
  max-width: 100%;
  width: calc((10em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--10--25 {
  max-width: 100%;
  width: calc((10em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--10--33-333 {
  max-width: 100%;
  width: calc((10em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--10--40 {
  max-width: 100%;
  width: calc((10em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--10--50 {
  max-width: 100%;
  width: calc((10em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--10--60 {
  max-width: 100%;
  width: calc((10em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--10--66-666 {
  max-width: 100%;
  width: calc((10em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--10--75 {
  max-width: 100%;
  width: calc((10em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--10--80 {
  max-width: 100%;
  width: calc((10em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--15--20 {
  max-width: 100%;
  width: calc((15em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--15--25 {
  max-width: 100%;
  width: calc((15em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--15--33-333 {
  max-width: 100%;
  width: calc((15em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--15--40 {
  max-width: 100%;
  width: calc((15em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--15--50 {
  max-width: 100%;
  width: calc((15em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--15--60 {
  max-width: 100%;
  width: calc((15em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--15--66-666 {
  max-width: 100%;
  width: calc((15em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--15--75 {
  max-width: 100%;
  width: calc((15em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--15--80 {
  max-width: 100%;
  width: calc((15em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--20--20 {
  max-width: 100%;
  width: calc((20em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--20--25 {
  max-width: 100%;
  width: calc((20em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--20--33-333 {
  max-width: 100%;
  width: calc((20em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--20--40 {
  max-width: 100%;
  width: calc((20em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--20--50 {
  max-width: 100%;
  width: calc((20em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--20--60 {
  max-width: 100%;
  width: calc((20em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--20--66-666 {
  max-width: 100%;
  width: calc((20em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--20--75 {
  max-width: 100%;
  width: calc((20em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--20--80 {
  max-width: 100%;
  width: calc((20em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--25--20 {
  max-width: 100%;
  width: calc((25em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--25--25 {
  max-width: 100%;
  width: calc((25em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--25--33-333 {
  max-width: 100%;
  width: calc((25em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--25--40 {
  max-width: 100%;
  width: calc((25em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--25--50 {
  max-width: 100%;
  width: calc((25em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--25--60 {
  max-width: 100%;
  width: calc((25em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--25--66-666 {
  max-width: 100%;
  width: calc((25em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--25--75 {
  max-width: 100%;
  width: calc((25em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--25--80 {
  max-width: 100%;
  width: calc((25em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--30--20 {
  max-width: 100%;
  width: calc((30em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--30--25 {
  max-width: 100%;
  width: calc((30em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--30--33-333 {
  max-width: 100%;
  width: calc((30em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--30--40 {
  max-width: 100%;
  width: calc((30em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--30--50 {
  max-width: 100%;
  width: calc((30em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--30--60 {
  max-width: 100%;
  width: calc((30em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--30--66-666 {
  max-width: 100%;
  width: calc((30em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--30--75 {
  max-width: 100%;
  width: calc((30em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--30--80 {
  max-width: 100%;
  width: calc((30em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--35--20 {
  max-width: 100%;
  width: calc((35em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--35--25 {
  max-width: 100%;
  width: calc((35em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--35--33-333 {
  max-width: 100%;
  width: calc((35em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--35--40 {
  max-width: 100%;
  width: calc((35em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--35--50 {
  max-width: 100%;
  width: calc((35em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--35--60 {
  max-width: 100%;
  width: calc((35em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--35--66-666 {
  max-width: 100%;
  width: calc((35em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--35--75 {
  max-width: 100%;
  width: calc((35em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--35--80 {
  max-width: 100%;
  width: calc((35em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--40--20 {
  max-width: 100%;
  width: calc((40em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--40--25 {
  max-width: 100%;
  width: calc((40em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--40--33-333 {
  max-width: 100%;
  width: calc((40em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--40--40 {
  max-width: 100%;
  width: calc((40em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--40--50 {
  max-width: 100%;
  width: calc((40em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--40--60 {
  max-width: 100%;
  width: calc((40em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--40--66-666 {
  max-width: 100%;
  width: calc((40em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--40--75 {
  max-width: 100%;
  width: calc((40em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--40--80 {
  max-width: 100%;
  width: calc((40em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--45--20 {
  max-width: 100%;
  width: calc((45em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--45--25 {
  max-width: 100%;
  width: calc((45em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--45--33-333 {
  max-width: 100%;
  width: calc((45em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--45--40 {
  max-width: 100%;
  width: calc((45em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--45--50 {
  max-width: 100%;
  width: calc((45em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--45--60 {
  max-width: 100%;
  width: calc((45em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--45--66-666 {
  max-width: 100%;
  width: calc((45em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--45--75 {
  max-width: 100%;
  width: calc((45em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--45--80 {
  max-width: 100%;
  width: calc((45em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--50--20 {
  max-width: 100%;
  width: calc((50em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--50--25 {
  max-width: 100%;
  width: calc((50em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--50--33-333 {
  max-width: 100%;
  width: calc((50em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--50--40 {
  max-width: 100%;
  width: calc((50em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--50--50 {
  max-width: 100%;
  width: calc((50em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--50--60 {
  max-width: 100%;
  width: calc((50em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--50--66-666 {
  max-width: 100%;
  width: calc((50em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--50--75 {
  max-width: 100%;
  width: calc((50em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--50--80 {
  max-width: 100%;
  width: calc((50em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--55--20 {
  max-width: 100%;
  width: calc((55em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--55--25 {
  max-width: 100%;
  width: calc((55em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--55--33-333 {
  max-width: 100%;
  width: calc((55em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--55--40 {
  max-width: 100%;
  width: calc((55em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--55--50 {
  max-width: 100%;
  width: calc((55em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--55--60 {
  max-width: 100%;
  width: calc((55em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--55--66-666 {
  max-width: 100%;
  width: calc((55em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--55--75 {
  max-width: 100%;
  width: calc((55em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--55--80 {
  max-width: 100%;
  width: calc((55em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--60--20 {
  max-width: 100%;
  width: calc((60em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--60--25 {
  max-width: 100%;
  width: calc((60em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--60--33-333 {
  max-width: 100%;
  width: calc((60em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--60--40 {
  max-width: 100%;
  width: calc((60em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--60--50 {
  max-width: 100%;
  width: calc((60em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--60--60 {
  max-width: 100%;
  width: calc((60em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--60--66-666 {
  max-width: 100%;
  width: calc((60em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--60--75 {
  max-width: 100%;
  width: calc((60em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--60--80 {
  max-width: 100%;
  width: calc((60em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--65--20 {
  max-width: 100%;
  width: calc((65em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--65--25 {
  max-width: 100%;
  width: calc((65em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--65--33-333 {
  max-width: 100%;
  width: calc((65em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--65--40 {
  max-width: 100%;
  width: calc((65em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--65--50 {
  max-width: 100%;
  width: calc((65em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--65--60 {
  max-width: 100%;
  width: calc((65em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--65--66-666 {
  max-width: 100%;
  width: calc((65em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--65--75 {
  max-width: 100%;
  width: calc((65em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--65--80 {
  max-width: 100%;
  width: calc((65em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--70--20 {
  max-width: 100%;
  width: calc((70em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--70--25 {
  max-width: 100%;
  width: calc((70em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--70--33-333 {
  max-width: 100%;
  width: calc((70em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--70--40 {
  max-width: 100%;
  width: calc((70em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--70--50 {
  max-width: 100%;
  width: calc((70em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--70--60 {
  max-width: 100%;
  width: calc((70em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--70--66-666 {
  max-width: 100%;
  width: calc((70em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--70--75 {
  max-width: 100%;
  width: calc((70em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--70--80 {
  max-width: 100%;
  width: calc((70em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--75--20 {
  max-width: 100%;
  width: calc((75em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--75--25 {
  max-width: 100%;
  width: calc((75em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--75--33-333 {
  max-width: 100%;
  width: calc((75em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--75--40 {
  max-width: 100%;
  width: calc((75em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--75--50 {
  max-width: 100%;
  width: calc((75em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--75--60 {
  max-width: 100%;
  width: calc((75em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--75--66-666 {
  max-width: 100%;
  width: calc((75em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--75--75 {
  max-width: 100%;
  width: calc((75em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--75--80 {
  max-width: 100%;
  width: calc((75em - 100%) * 1000);
  min-width: 80%;
}

.ff-width-100--80--20 {
  max-width: 100%;
  width: calc((80em - 100%) * 1000);
  min-width: 20%;
}

.ff-width-100--80--25 {
  max-width: 100%;
  width: calc((80em - 100%) * 1000);
  min-width: 25%;
}

.ff-width-100--80--33-333 {
  max-width: 100%;
  width: calc((80em - 100%) * 1000);
  min-width: 33.333%;
}

.ff-width-100--80--40 {
  max-width: 100%;
  width: calc((80em - 100%) * 1000);
  min-width: 40%;
}

.ff-width-100--80--50 {
  max-width: 100%;
  width: calc((80em - 100%) * 1000);
  min-width: 50%;
}

.ff-width-100--80--60 {
  max-width: 100%;
  width: calc((80em - 100%) * 1000);
  min-width: 60%;
}

.ff-width-100--80--66-666 {
  max-width: 100%;
  width: calc((80em - 100%) * 1000);
  min-width: 66.666%;
}

.ff-width-100--80--75 {
  max-width: 100%;
  width: calc((80em - 100%) * 1000);
  min-width: 75%;
}

.ff-width-100--80--80 {
  max-width: 100%;
  width: calc((80em - 100%) * 1000);
  min-width: 80%;
}

/* ---------------------------------------------------------------------------------------------- */
/* --| Utility Patterns |------------------------------------------------------------------------ */
/*
    Block Center
    ============

    Centers items inside a container.

*/
/*
    I'm considering using grid for this.
    It is already necessary for IE11
*/
.u-block-center {
  /*
        IE10-11

        1. IE11- seems to need this.
        ... Or, maybe not!?!?! Weird. 03/09/2020 - taken this out.
        UGGGGH - needs it in the banner badges, but not badge list badges.
    */
  /* NEEDS WORK
    @media only all and (-ms-high-contrast: none), only all and (-ms-high-contrast: active) {

        &.u-block-center {
            display: -ms-grid;
            -ms-grid-columns: 100%;
            -ms-grid-rows: 100%;
        }

        & > * {            
            -ms-grid-column-align: center;
            -ms-grid-row-align: center;
        }

    }
    */
}

.u-block-center.u-block-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.u-block-center > * {
  flex: 0 1 auto;
}

/*
    Fill Height
    ============

    Forces an element to fill it's container height.

*/
/*
    height: 100% is needed for IE10-11, but breaks Safari 9-10.
    Adding to IE via hack, but could switch to overriding for Safari if need be.
    min-height seems to be safe for Safari though, and is needed for Edge.
*/
.u-fill-height {
  flex: 1 0 auto;
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

.u-fill-height > * {
  flex: 1 0 auto;
}

@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .u-fill-height {
    height: 100%;
  }
}

.u-fill-height--column {
  display: flex !important;
  flex-direction: column;
}

.u-fill-height--column > * {
  flex: 0 0 auto;
}

.u-fill-height--column > .u-fill-height--column__expand {
  flex: 1 0 auto;
}

/*
    Fill Width
    ============

    Forces an element to fill it's container width.

*/
.u-fill-width {
  width: 100%;
}

/* ---------------------------------------------------------------------------------------------- */
/* --| SHAME |----------------------------------------------------------------------------------- */
.c-utilitext {
  font-size: 0.875em;
}

p[role="list"] {
  overflow-x: hidden;
  overflow-y: visible;
  display: flex;
  flex-wrap: wrap;
}

span[role="listitem"] {
  white-space: nowrap;
  padding-left: 1.5em;
  margin-left: -1.5em;
  margin-right: 1.5em;
  text-indent: -0.15em;
}

span[role="listitem"]::before {
  content: ' | ';
  text-align: center;
  display: inline-block;
  width: 1.5em;
  height: 1em;
  margin-left: -1.5em;
  text-indent: 0.3em;
}

span[role="listitem"] > * {
  white-space: normal;
}

/*
    1. This size allows 2px on normal fonts, 1px on smaller fonts.
*
a[href] {

    margin: 0;
    padding: 0;
    border: 0;
    text-decoration: underline;
    text-decoration-style: solid;
    text-decoration-thickness: 0.13em; /* [1] *
    text-underline-offset: 0.2em;


    &:hover, &:hover {
        border: inherit;
        text-decoration-style: dashed;
    }
}

// FF appears to calculate thickness very differently form Chrome.
@supports (-moz-appearance:none) {
    a[href] {
        text-decoration-thickness: 0.1em; /* [1] *
    }
}

// IE11 alternaive styles since it doesn't support text-decoration properties:
@media screen and (-ms-high-contrast:active), (-ms-high-contrast:none) {
    a[href] {
        &:hover, &:hover {
            text-decoration: none;
        }
    }
}

// Give link icons some space unless they're the only child.
a svg:not(:only-child) {
    margin-left: 0.25em;
}

@media screen and (-ms-high-contrast:active), (-ms-high-contrast:none) {
    a svg {
        vertical-align: text-bottom;
    }
}
*/
/* ---------------------------------------------------------------------------------------------- */
/* ---------------------------------------------------------------------------------------------- */
